---
- name: Set OS-specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution|lower }}.yml"
    - "{{ ansible_os_family|lower }}.yml"
  tags: [mariadb]

#---------------------------------------------------------------------------
- name: Handle MariaDB installation
  block:
    - name: Include OS-specific installation tasks
      include_tasks: "packages_{{ ansible_distribution|lower }}.yml"

    - name: Start and enable MariaDB service
      service:
        name: mariadb
        state: started
        enabled: yes

    - name: Deploy MariaDB configuration
      template:
        src: my.cnf.j2
        dest: "{{ mariadb_conf_path }}"
        owner: root
        group: root
        mode: "0644"
      notify: restart mariadb
      register: cmd_result

    - name: Start and enable MariaDB service
      service:
        name: mariadb
        state: started
        enabled: yes

      # .............................................................
    - name: test if root password need setting
      block:
        - name: Set MariaDB root password
          community.mysql.mysql_user:
            login_user: root
            login_password: ""
            login_host: localhost
            login_unix_socket: /run/mysqld/mysqld.sock
            check_implicit_admin: true
            name: root
            password: "{{ mysql_password }}"
            host_all: yes
            state: present
          ignore_errors: true

        - name: Save root credentials on remote
          ansible.builtin.copy:
            content: "{{ mysql_password }}"
            dest: "/root/.mysql_root"
            mode: "0600"
          no_log: true

      when: mysql_password != ""

      rescue:
        - name: Check if MySQL password works
          ansible.builtin.shell: mysql -u root -p"{{ mysql_root_password }}" -e "SELECT 1" 2>/dev/null
          register: mysql_check
          ignore_errors: yes
          changed_when: false

        - name: Fail playbook if MySQL password is invalid
          fail:
            msg: "MySQL root password is invalid. Please check your credentials."
          when: mysql_check.rc != 0

        - name: Continue with rest of playbook
          debug:
            msg: "MySQL password is valid, continuing with playbook"
          when: mysql_check.rc == 0

    # ................................................
    - name: Configure MariaDB security
      include_tasks: secure.yml
      when: mariadb_security
      tags: [mariadb, security]

    - name: Manage MySQL Users
      include_tasks: manage_users.yml
      when: mysql_users | length > 0
      tags: [mariadb, users]

  when: mariadb_state == "present"
  tags: [mariadb]

#---------------------------------------------------------------------------
- name: Handle MariaDB removal
  block:
    - name: Include OS-specific installation tasks
      include_tasks: "packages_{{ ansible_distribution|lower }}.yml"

    - name: Stop MariaDB service
      service:
        name: mysql
        state: stopped
        enabled: false
      ignore_errors: true

    - name: Wait for MariaDB to stop
      wait_for:
        path: /var/run/mysqld/mysqld.pid
        state: absent
        timeout: 30

    # note: we install a single file in the /etc/mysql
    - name: Remove MariaDB configuration
      file:
        path: /etc/mysql
        state: absent
      when: mariadb_remove_config | bool

    - name: Remove MariaDB data directory
      file:
        path: "{{ mariadb_datadir }}"
        state: absent
      when: mariadb_remove_data | bool

  when: mariadb_state == "absent"
  tags: [mariadb]
