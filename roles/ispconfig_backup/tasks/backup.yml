---
# =====================================================================================================
# ISPConfig Configuration Backup Tasks
# This handles the main backup functionality using git versioning

# =====================================================================================================
# Git repository setup

- name: Create backup repository directory
  ansible.builtin.file:
    path: "{{ ispconfig_backup_git.repository_path }}"
    state: directory
    owner: root
    group: root
    mode: "0755"
  when: ispconfig_backup_git.enabled | bool

- name: Initialize git repository if it doesn't exist
  ansible.builtin.shell: |
    if [ ! -d "{{ ispconfig_backup_git.repository_path }}/.git" ]; then
      cd "{{ ispconfig_backup_git.repository_path }}"
      git init
      git config user.name "Ansible ISPConfig Backup"
      git config user.email "ansible@{{ ansible_hostname }}"
      echo "# ISPConfig Configuration Backup Repository" > README.md
      echo "Generated by Ansible on {{ ansible_date_time.iso8601 }}" >> README.md
      git add README.md
      git commit -m "Initial repository setup"
    fi
  when: ispconfig_backup_git.enabled | bool and ispconfig_backup_git.manage_repository | bool
  register: git_init_result
  changed_when: "'Initial repository setup' in git_init_result.stdout"

# =====================================================================================================
# Create directory structure for organized backups

- name: Create backup directory structure
  ansible.builtin.file:
    path: "{{ ispconfig_backup_git.repository_path }}/configs"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Create fingerprints directory
  ansible.builtin.file:
    path: "{{ ispconfig_backup_git.repository_path }}/fingerprints"
    state: directory
    owner: root
    group: root
    mode: "0755"

# =====================================================================================================
# Process all backup targets

- name: Process ISPConfig backup targets
  include_tasks: process_backup_target.yml
  loop: "{{ ispconfig_backup_targets + (ispconfig_backup_php_targets if ispconfig_backup_include_php else []) }}"
  loop_control:
    loop_var: backup_target
    label: "{{ backup_target.name }}"
  when: backup_target.condition | default(true) | bool

# =====================================================================================================
# Create backup manifest and fingerprint summary

- name: Generate backup manifest
  ansible.builtin.template:
    src: backup_manifest.j2
    dest: "{{ ispconfig_backup_git.repository_path }}/BACKUP_MANIFEST.md"
    owner: root
    group: root
    mode: "0644"
  vars:
    backup_timestamp: "{{ ansible_date_time.iso8601 }}"
    backup_targets_processed: "{{ ispconfig_backup_targets + (ispconfig_backup_php_targets if ispconfig_backup_include_php else []) }}"

# =====================================================================================================
# Commit all changes to git

- name: Stage all changes in git repository
  ansible.builtin.shell: |
    cd "{{ ispconfig_backup_git.repository_path }}"
    git add .
  when: ispconfig_backup_git.enabled | bool
  register: git_add_result
  changed_when: git_add_result.rc == 0

- name: Check if there are changes to commit
  ansible.builtin.shell: |
    cd "{{ ispconfig_backup_git.repository_path }}"
    git diff --cached --quiet
  register: git_diff_check
  failed_when: false
  changed_when: false
  when: ispconfig_backup_git.enabled | bool

- name: Commit changes to git repository
  ansible.builtin.shell: |
    cd "{{ ispconfig_backup_git.repository_path }}"
    git commit -m "{{ ispconfig_backup_git.commit_msg }}"
  when:
    - ispconfig_backup_git.enabled | bool
    - git_diff_check.rc == 1 # rc=1 means there are changes to commit
  register: git_commit_result
  changed_when: git_commit_result.rc == 0

- name: Backup completed successfully
  ansible.builtin.debug:
    msg: "ISPConfig backup completed at {{ ansible_date_time.iso8601 }}"
